using DataAccess.Domain;
using DataService;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using WanTaiWeb.Areas.Web.Models;
using WanTaiWeb.Infrastructure;

namespace WanTaiWeb.Areas.Web.Controllers
{
    public class UserController : WechatLoginController
    {
        #region 字段

        private IWechatService _wechatService;
        private IInoculationService _inoculationService;
        private IWechatTemplateService _templateService;

        #endregion

        #region 构造

        public UserController(IWechatService wechatService, IInoculationService inoculationService, IWechatTemplateService templateService)
        {
            _wechatService = wechatService;
            _inoculationService = inoculationService;
            _templateService = templateService;
        }

        #endregion

        #region 个人资料
        public ActionResult Index()
        {
            return View();
        }

        public new ActionResult Profile()
        {
            var profile = _wechatService.GetWechatUserProfile(UserCache.WechatUser.ID);

            return View(profile);
        }

        [HttpPost]
        [ValidateInput(false)]
        public new ActionResult Profile(WechatUserProfile profile)
        {
            _wechatService.EditWechatUserProfile(UserCache.WechatUser.ID, a =>
            {
                a.Name = profile.Name;
                a.Tel = profile.Tel;
                a.Email = profile.Email;
            });

            return RedirectToAction("Index");
        }

        public ActionResult Inoculation()
        {
            var records = _inoculationService.GetMyInoculationRecords(UserCache.WechatUser.ID).OrderByDescending(a => a.Status).ThenBy(a => a.ActualInoculabilityTime ?? a.ActualInoculabilityTime);

            ViewBag.configs = _inoculationService.GetUserConfigs(UserCache.WechatUser.ID);

            return View(records);
        }
        #endregion

        #region 接种记录
        public ActionResult CreateRecord()
        {
            var configs = _inoculationService.GetUserConfigs(UserCache.WechatUser.ID);

            if (configs.Any() == false)
                return RedirectToAction("Inoculation");

            return View(configs);
        }
        [HttpPost]
        [ValidateInput(false)]
        public ActionResult CreateRecord(InoculationRecord record)
        {
            _inoculationService.CreateInoculationRecord(record,UserCache.WechatUser.ID);

            return RedirectToAction("Inoculation");
        }
        [HttpPost]
        [ValidateInput(false)]
        public ActionResult SaveRecord(InoculationRecord record)
        {
            _inoculationService.EditInoculationRecord(record, UserCache.WechatUser.ID);

            return RedirectToAction("Inoculation");
        }

        public ActionResult CreateCustomRecord()
        {
            return View();
        }
        [HttpPost]
        [ValidateInput(false)]
        public ActionResult CreateCustomRecord(InoculationRecord record)
        {
            _inoculationService.CreateInoculationRecord(record, UserCache.WechatUser.ID);

            return RedirectToAction("Inoculation");
        }

        public ActionResult Record(int id)
        {
            var record = _inoculationService.GetMyInoculationRecords(UserCache.WechatUser.ID).SingleOrDefault(a => a.ID == id);
            if (record == null)
                return RedirectToAction("Inoculation");

            return View(record);
        }
        public ActionResult DeleteRecord(int id)
        {
            _inoculationService.DeleteInoculationRecord(id, UserCache.WechatUser.ID);

            return RedirectToAction("Inoculation");
        }
        #endregion

        #region 会议信息
        public ActionResult Meeting(MeetingModel meeting)
        {
            meeting.LoadMeetings();

            return View(meeting);
        }
        public ActionResult MeetingDetail(MeetingModel meeting)
        {
            meeting.LoadMeeting();

            if (meeting.Meeting == null)
                return RedirectToAction("Meeting");

            return View(meeting);
        }
        #endregion

        #region 消息提醒
        public ActionResult Message()
        {        
            var templates = _templateService.GetUserTemplates(UserCache.WechatUser.OpenID);
            return View(templates);
        }
        #endregion
    }
}